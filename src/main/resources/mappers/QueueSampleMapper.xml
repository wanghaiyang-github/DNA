<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bazl.hslims.manager.model.po.QueueSample">

  <resultMap id="BaseResultMap" type="com.bazl.hslims.manager.model.po.QueueSample">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CONSIGNMENT_ID" jdbcType="INTEGER" property="consignmentId" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="CREATE_DATETIME" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="OPERATE_DATETIME" jdbcType="TIMESTAMP" property="operateDatetime" />
    <result column="OPERATE_PERSON" jdbcType="VARCHAR" property="operatePerson" />
    <result column="QUEUE_TYPE" jdbcType="CHAR" property="queueType" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
  </resultMap>


  <sql id="Base_Column_List">
    ID, CASE_ID,CONSIGNMENT_ID, STATUS, CREATE_DATETIME, OPERATE_DATETIME, OPERATE_PERSON, QUEUE_TYPE, FILE_NAME
  </sql>


  <select id="selectPendingCaseIdList" resultType="int">
    select CASE_ID
    from queue_sample
    where QUEUE_TYPE='15'
  </select>

  <select id="selectFailedCaseIdList" resultType="int">
    select CASE_ID
    from queue_sample
    where SYNC_FAILED_FLAG='1'
  </select>

  <select id="selectList" parameterType="com.bazl.hslims.manager.model.po.QueueSample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from queue_sample
    <if test="_parameter != null">
      <where>
        <if test="caseId != null">
          CASE_ID=#{caseId, jdbcType=INTEGER}
        </if>
        <if test="queueType != null">
          AND QUEUE_TYPE=#{queueType, jdbcType=CHAR}
        </if>
        <if test="status != null">
          AND STATUS=#{status, jdbcType=CHAR}
        </if>
      </where>
    </if>
    order by case_id, queue_type
    limit 0, 100
  </select>

  <delete id="deleteByPrimaryKey" parameterType="int">
    delete from queue_sample where ID=#{id, jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByCaseId" parameterType="int">
    delete from queue_sample where CASE_ID=#{caseId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.bazl.hslims.manager.model.po.QueueSample" useGeneratedKeys="true" keyProperty="id">
    insert into queue_sample (
     CASE_ID, CONSIGNMENT_ID, STATUS, OPERATE_PERSON, QUEUE_TYPE, FILE_NAME
    ) values (
    #{caseId,jdbcType=INTEGER}, #{consignmentId,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{operatePerson,jdbcType=VARCHAR},
    #{queueType,jdbcType=CHAR}, #{fileName,jdbcType=VARCHAR}
    )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.bazl.hslims.manager.model.po.QueueSample">
    update queue_sample
    set
      CASE_ID=#{caseId,jdbcType=INTEGER},
      CONSIGNMENT_ID=#{consignmentId,jdbcType=INTEGER},
      STATUS=#{status,jdbcType=CHAR},
      OPERATE_PERSON=#{operatePerson,jdbcType=VARCHAR},
      QUEUE_TYPE=#{queueType,jdbcType=CHAR},
      FILE_NAME=#{fileName,jdbcType=VARCHAR}
    where ID=#{id, jdbcType=INTEGER}
  </update>

  <update id="updateByStatus" parameterType="com.bazl.hslims.manager.model.po.QueueSample">
    update queue_sample
    set
    STATUS=#{status,jdbcType=CHAR}
    where ID=#{id, jdbcType=INTEGER}
  </update>

</mapper>