<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bazl.hslims.manager.model.po.LimsPcrRecord">
  <resultMap id="BaseResultMap" type="com.bazl.hslims.manager.model.po.LimsPcrRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PCR_TASK_NO" jdbcType="VARCHAR" property="pcrTaskNo" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="BOARD_NO" jdbcType="VARCHAR" property="boardNo" />
    <result column="PCR_PROGRAM" jdbcType="VARCHAR" property="pcrProgram" />
    <result column="PCR_INSTRUMENT" jdbcType="VARCHAR" property="pcrInstrument" />
    <result column="PCR_SYSTEM" jdbcType="VARCHAR" property="pcrSystem" />
    <result column="PCR_REAGENT" jdbcType="VARCHAR" property="pcrReagent" />
    <result column="PCR_REAGENT_NAME" jdbcType="VARCHAR" property="pcrReagentName" />
    <result column="PCR_LOOP_COUNT" jdbcType="INTEGER" property="pcrLoopCount" />
    <result column="PCR_TEMPERATURE" jdbcType="VARCHAR" property="pcrTemperature" />
    <result column="PCR_HUMIDITY" jdbcType="VARCHAR" property="pcrHumidity" />
    <result column="PCR_START_DATETIME" jdbcType="TIMESTAMP" property="pcrStartDatetime" />
    <result column="PCR_END_DATETIME" jdbcType="TIMESTAMP" property="pcrEndDatetime" />
    <result column="PCR_PERSON_ID1" jdbcType="VARCHAR" property="pcrPersonId1" />
    <result column="PCR_PERSON_NAME1" jdbcType="VARCHAR" property="pcrPersonName1" />
    <result column="PCR_PERSON_ID2" jdbcType="VARCHAR" property="pcrPersonId2" />
    <result column="PCR_PERSON_NAME2" jdbcType="VARCHAR" property="pcrPersonName2" />
    <result column="SAMPLE_COUNT" jdbcType="INTEGER" property="sampleCount" />
    <result column="CREATE_DATETIME" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="CREATE_PERSON" jdbcType="VARCHAR" property="createPerson" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
  </resultMap>

  <resultMap id="LimsPcrRecordSampleResultMap" type="com.bazl.hslims.manager.model.po.LimsPcrRecordSample">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="LIMS_PCR_RECORD_ID" jdbcType="INTEGER" property="limsPcrRecordId" />
    <result column="SAMPLE_ID" jdbcType="INTEGER" property="sampleId" />
    <result column="SAMPLE_NO" jdbcType="VARCHAR" property="sampleNo" />
    <result column="SAMPLE_NAME" jdbcType="VARCHAR" property="sampleName" />
    <result column="SAMPLE_TYPE_NAME" jdbcType="VARCHAR" property="sampleTypeName" />
    <result column="STANDARD_FLAG" jdbcType="CHAR" property="standardFlag" />
    <result column="PRIMER_UL" jdbcType="VARCHAR" property="primerUl" />
    <result column="BUFFER_UL" jdbcType="VARCHAR" property="bufferUl" />
    <result column="TEMPLATE_UL" jdbcType="VARCHAR" property="templateUl" />
    <result column="DDW_UL" jdbcType="VARCHAR" property="ddwUl" />
    <result column="CREATE_PERSON" jdbcType="VARCHAR" property="createPerson" />
    <result column="CREATE_DATETIME" jdbcType="TIMESTAMP" property="createDatetime" />

    <result column="PCR_REAGENT" jdbcType="VARCHAR" property="pcrReagent" />
    <result column="SAMPLE_POSTION" jdbcType="VARCHAR" property="samplePosition" />
  </resultMap>

  <sql id="Base_Column_List">
    ID, PCR_TASK_NO, CASE_ID, BOARD_NO, PCR_PROGRAM, PCR_INSTRUMENT, PCR_SYSTEM, PCR_REAGENT, PCR_LOOP_COUNT,
    PCR_TEMPERATURE, PCR_HUMIDITY, PCR_START_DATETIME, PCR_END_DATETIME, PCR_PERSON_ID1,
    PCR_PERSON_NAME1, PCR_PERSON_ID2, PCR_PERSON_NAME2, SAMPLE_COUNT, CREATE_DATETIME, CREATE_PERSON,TASK_ID
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lims_pcr_record
    where ID = #{id,jdbcType=INTEGER}
  </select>


  <sql id="Query_Where_Clause">
    <where>
      <if test="entity.pcrTaskNo != null">
        PCR_TASK_NO=#{entity.pcrTaskNo, jdbcType=VARCHAR}
      </if>
      <if test="sampleNo != null">
        AND ID IN (select LIMS_PCR_RECORD_ID from lims_pcr_record_sample where SAMPLE_NO = #{sampleNo, jdbcType=VARCHAR})
      </if>
      <if test="sampleId != null">
        AND ID IN (select LIMS_PCR_RECORD_ID from lims_pcr_record_sample where SAMPLE_ID = #{sampleId, jdbcType=INTEGER})
      </if>
      <if test="entity.boardNo != null">
        AND BOARD_NO=#{entity.boardNo, jdbcType=VARCHAR}
      </if>
      <if test="entity.pcrPersonId1 != null">
        and PCR_PERSON_ID1=#{entity.pcrPersonId1, jdbcType=VARCHAR}
      </if>
      <if test="entity.pcrPersonName2 != null">
        and PCR_PERSON_NAME2=#{entity.pcrPersonName2, jdbcType=VARCHAR}
      </if>

      <if test="pcrDatetimeStartAt != null">
        <![CDATA[ and PCR_START_DATETIME>=#{pcrDatetimeStartAt, jdbcType=TIMESTAMP}  ]]>
      </if>
      <if test="pcrDatetimeEndAt != null">
        <![CDATA[ and PCR_END_DATETIME<=#{pcrDatetimeEndAt, jdbcType=TIMESTAMP}  ]]>
      </if>

    </where>
  </sql>

  <select id="selectPaginationList" parameterType="com.bazl.hslims.manager.model.vo.LimsPcrRecordVO" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from lims_pcr_record
    <if test="_parameter != null">
      <include refid="Query_Where_Clause"/>
    </if>
    limit #{offset}, #{rows}
  </select>


  <select id="selectCount" parameterType="com.bazl.hslims.manager.model.vo.LimsPcrRecordVO" resultType="int">
    SELECT count(ID) from lims_pcr_record
    <if test="_parameter != null">
      <include refid="Query_Where_Clause"/>
    </if>
  </select>


  <select id="selectListByCaseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT *,d.PANEL_NAME AS PCR_REAGENT_NAME
    FROM lims_pcr_record
    LEFT JOIN panel_info d ON d.id = PCR_REAGENT
    where CASE_ID=#{caseId,jdbcType=INTEGER} order by PCR_END_DATETIME desc
  </select>

  <select id="selectCountByCaseId" parameterType="java.lang.Integer" resultType="int">
    select COUNT(id) from lims_pcr_record where CASE_ID=#{caseId, jdbcType=INTEGER}
  </select>

  <select id="selectSampleListByPcrRecordId" parameterType="java.lang.Integer" resultMap="LimsPcrRecordSampleResultMap">
    SELECT lsi.SAMPLE_NAME,d.DICT_NAME as SAMPLE_TYPE_NAME,lprs.ID, lprs.LIMS_PCR_RECORD_ID, lprs.SAMPLE_ID, lprs.SAMPLE_NO, lprs.STANDARD_FLAG,
    lprs.PRIMER_UL, lprs.BUFFER_UL,lprs.TEMPLATE_UL, lprs.DDW_UL, lprs.CREATE_PERSON, lprs.CREATE_DATETIME,lprs.SAMPLE_POSTION
    FROM lims_pcr_record_sample lprs left join
    (lims_sample_info lsi left join dict_item d on lsi.SAMPLE_TYPE=d.DICT_CODE and d.DICT_TYPE_CODE='SAMPLE_TYPE') on lprs.SAMPLE_ID=lsi.ID
    WHERE lprs.LIMS_PCR_RECORD_ID=#{limsPcrRecordId,jdbcType=INTEGER} order by lsi.SAMPLE_FLAG desc, lprs.SAMPLE_NO asc
  </select>

  <select id="selectListBySampleId" parameterType="java.lang.Integer" resultMap="LimsPcrRecordSampleResultMap">
    SELECT *,lpr.PCR_REAGENT as PCR_REAGENT
    FROM lims_pcr_record_sample lprs
    left join lims_pcr_record lpr on lprs.LIMS_PCR_RECORD_ID = lpr.ID
    where lprs.SAMPLE_ID = #{sampleId,jdbcType=INTEGER} order by lprs.CREATE_DATETIME desc
  </select>

  <select id="selecCountBySampleNo" parameterType="java.lang.String" resultType="int">
    select count(distinct lpr.TASK_ID) from lims_pcr_record_sample lprs
    left join lims_pcr_record lpr on lprs.LIMS_PCR_RECORD_ID = lpr.ID
    where lprs.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND lpr.TASK_ID!=''
  </select>

  <select id="selectListBySampleNo" parameterType="java.lang.String" resultMap="LimsPcrRecordSampleResultMap">
    select * from lims_pcr_record_sample lprs
    left join lims_pcr_record lpr on lprs.LIMS_PCR_RECORD_ID = lpr.ID
    where lprs.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND lpr.TASK_ID!=''
  </select>

  <select id="selectSampleNoByTaskId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct lpr.* from lims_pcr_record_sample lprs
    left join lims_pcr_record lpr on lprs.LIMS_PCR_RECORD_ID = lpr.ID
    where lprs.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND lpr.TASK_ID!=''
  </select>


  <select id="selectByTaskId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from lims_pcr_record
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lims_pcr_record
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.bazl.hslims.manager.model.po.LimsPcrRecord" useGeneratedKeys="true" keyProperty="id">
    insert into lims_pcr_record (PCR_TASK_NO, CASE_ID, BOARD_NO, PCR_PROGRAM,
      PCR_INSTRUMENT, PCR_SYSTEM, PCR_REAGENT, 
      PCR_LOOP_COUNT, PCR_TEMPERATURE, PCR_HUMIDITY, 
      PCR_START_DATETIME, PCR_END_DATETIME, PCR_PERSON_ID1, PCR_PERSON_NAME1, PCR_PERSON_ID2, PCR_PERSON_NAME2, SAMPLE_COUNT, CREATE_PERSON)
    values (#{pcrTaskNo,jdbcType=VARCHAR}, #{caseId,jdbcType=INTEGER}, #{boardNo,jdbcType=VARCHAR}, #{pcrProgram,jdbcType=VARCHAR},
      #{pcrInstrument,jdbcType=VARCHAR}, #{pcrSystem,jdbcType=VARCHAR}, #{pcrReagent,jdbcType=VARCHAR}, 
      #{pcrLoopCount,jdbcType=INTEGER}, #{pcrTemperature,jdbcType=VARCHAR}, #{pcrHumidity,jdbcType=VARCHAR}, 
      #{pcrStartDatetime,jdbcType=TIMESTAMP}, #{pcrEndDatetime,jdbcType=TIMESTAMP},
      #{pcrPersonId1,jdbcType=VARCHAR}, #{pcrPersonName1,jdbcType=VARCHAR}, #{pcrPersonId2,jdbcType=VARCHAR}, #{pcrPersonName2,jdbcType=VARCHAR},
      #{sampleCount,jdbcType=INTEGER}, #{createPerson,jdbcType=VARCHAR})
  </insert>


  <insert id="insertLimsPcrRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsPcrRecordSample">
    insert into lims_pcr_record_sample (LIMS_PCR_RECORD_ID, SAMPLE_ID, SAMPLE_NO, STANDARD_FLAG,
    PRIMER_UL, BUFFER_UL, TEMPLATE_UL, DDW_UL, CREATE_PERSON,SAMPLE_POSTION)
    values (#{limsPcrRecordId,jdbcType=INTEGER}, #{sampleId,jdbcType=INTEGER}, #{sampleNo,jdbcType=VARCHAR},
    #{standardFlag,jdbcType=CHAR}, #{primerUl,jdbcType=VARCHAR}, #{bufferUl,jdbcType=VARCHAR}, #{templateUl,jdbcType=VARCHAR},
    #{ddwUl,jdbcType=VARCHAR}, #{createPerson,jdbcType=VARCHAR},#{samplePosition,jdbcType=VARCHAR})
  </insert>


  <update id="updateLimsPcrRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsPcrRecordSample">
    update lims_pcr_record_sample
    set LIMS_PCR_RECORD_ID = #{limsPcrRecordId,jdbcType=INTEGER},
    SAMPLE_ID = #{sampleId,jdbcType=INTEGER},
    SAMPLE_NO = #{sampleNo,jdbcType=VARCHAR},
    STANDARD_FLAG = #{standardFlag,jdbcType=CHAR},
    PRIMER_UL = #{primerUl,jdbcType=VARCHAR},
    BUFFER_UL = #{bufferUl,jdbcType=VARCHAR},
    TEMPLATE_UL = #{templateUl,jdbcType=VARCHAR},
    DDW_UL = #{ddwUl,jdbcType=VARCHAR},
    SAMPLE_POSTION = #{samplePosition,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteLimsPcrRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsPcrRecordSample">
    delete from lims_pcr_record_sample
    where LIMS_PCR_RECORD_ID=#{limsPcrRecordId,jdbcType=INTEGER} and ID=#{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteLimsPcrRecordSamplesByRecordId" parameterType="java.lang.Integer">
    delete from lims_pcr_record_sample where LIMS_PCR_RECORD_ID=#{limsPcrRecordId,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.bazl.hslims.manager.model.po.LimsPcrRecord">
    update lims_pcr_record
    set
      PCR_TASK_NO = #{pcrTaskNo,jdbcType=VARCHAR},
      BOARD_NO = #{boardNo,jdbcType=VARCHAR},
      PCR_PROGRAM = #{pcrProgram,jdbcType=VARCHAR},
      PCR_INSTRUMENT = #{pcrInstrument,jdbcType=VARCHAR},
      PCR_SYSTEM = #{pcrSystem,jdbcType=VARCHAR},
      PCR_REAGENT = #{pcrReagent,jdbcType=VARCHAR},
      PCR_LOOP_COUNT = #{pcrLoopCount,jdbcType=INTEGER},
      PCR_TEMPERATURE = #{pcrTemperature,jdbcType=VARCHAR},
      PCR_HUMIDITY = #{pcrHumidity,jdbcType=VARCHAR},
      PCR_START_DATETIME = #{pcrStartDatetime,jdbcType=TIMESTAMP},
      PCR_END_DATETIME = #{pcrEndDatetime,jdbcType=TIMESTAMP},
      PCR_PERSON_ID1 = #{pcrPersonId1,jdbcType=VARCHAR},
      PCR_PERSON_NAME1 = #{pcrPersonName1,jdbcType=VARCHAR},
      PCR_PERSON_ID2 = #{pcrPersonId2,jdbcType=VARCHAR},
      PCR_PERSON_NAME2 = #{pcrPersonName2,jdbcType=VARCHAR},
      SAMPLE_COUNT=#{sampleCount,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>