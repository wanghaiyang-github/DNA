<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bazl.hslims.manager.model.po.LimsExtractRecord">
  <resultMap id="BaseResultMap" type="com.bazl.hslims.manager.model.po.LimsExtractRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="EXTRACT_TASK_NO" jdbcType="VARCHAR" property="extractTaskNo" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId"/>
    <result column="BOARD_NO" jdbcType="VARCHAR" property="boardNo" />
    <result column="SAMPLE_COUNT" jdbcType="INTEGER" property="sampleCount" />
    <result column="EXTRACT_DATETIME" jdbcType="TIMESTAMP" property="extractDatetime" />
    <result column="EXTRACT_PERSON_ID1" jdbcType="INTEGER" property="extractPersonId1" />
    <result column="EXTRACT_PERSON_NAME1" jdbcType="VARCHAR" property="extractPersonName1" />
    <result column="EXTRACT_PERSON_ID2" jdbcType="INTEGER" property="extractPersonId2" />
    <result column="EXTRACT_PERSON_NAME2" jdbcType="VARCHAR" property="extractPersonName2" />
    <result column="CREATE_DATETIME" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="CREATE_PERSON" jdbcType="VARCHAR" property="createPerson" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
  </resultMap>

  <resultMap id="LimsExtractRecordSampleResultMap" type="com.bazl.hslims.manager.model.po.LimsExtractRecordSample">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="LIMS_EXTRACT_RECORD_ID" jdbcType="INTEGER" property="limsExtractRecordId" />
    <result column="SAMPLE_ID" jdbcType="INTEGER" property="sampleId" />
    <result column="SAMPLE_NO" jdbcType="VARCHAR" property="sampleNo" />
    <result column="SAMPLE_NAME" jdbcType="VARCHAR" property="sampleName" />
    <result column="SAMPLE_TYPE" jdbcType="VARCHAR" property="sampleType" />
    <result column="SAMPLE_TYPE_NAME" jdbcType="VARCHAR" property="sampleTypeName" />
    <result column="EXTRACT_METHOD" jdbcType="VARCHAR" property="extractMethod" />
    <result column="EXTRACT_HB" jdbcType="VARCHAR" property="extractHb" />
    <result column="EXTRACT_PSA" jdbcType="VARCHAR" property="extractPsa" />
    <result column="EXTRACT_LI_FLAG" jdbcType="CHAR" property="extractLiFlag" />
    <result column="EXTRACT_ZHEN_FLAG" jdbcType="CHAR" property="extractZhenFlag" />
    <result column="EXTRACT_JIAO_FLAG" jdbcType="CHAR" property="extractJiaoFlag" />
    <result column="EXTRACT_YU_FLAG" jdbcType="CHAR" property="extractYuFlag" />
    <result column="EXTRACT_OTHER_INSTRUMENT" jdbcType="VARCHAR" property="extractOtherInstrument" />
    <result column="CREATE_PERSON_ID" jdbcType="INTEGER" property="createPersonId" />
    <result column="CREATE_PERSON_NAME" jdbcType="VARCHAR" property="createPersonName" />
    <result column="CREATE_DATETIME" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="EXTRACT_POSITION" jdbcType="VARCHAR" property="extractPosition" />
    <result column="CHANGE_METHOD" jdbcType="VARCHAR" property="changeMethod" />
    <result column="OTHER_CHANGE_METHOD" jdbcType="VARCHAR" property="otherChangeMethod" />
  </resultMap>

  <sql id="Base_Column_List">
    ID, EXTRACT_TASK_NO, CASE_ID, BOARD_NO, SAMPLE_COUNT,
    EXTRACT_DATETIME, EXTRACT_PERSON_ID1, EXTRACT_PERSON_NAME1, EXTRACT_PERSON_ID2, EXTRACT_PERSON_NAME2, CREATE_DATETIME, CREATE_PERSON,TASK_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lims_extract_record
    where ID = #{id,jdbcType=INTEGER}
  </select>


  <sql id="Query_Where_Clause">
    <where>
      <if test="entity.extractTaskNo != null">
        EXTRACT_TASK_NO=#{entity.extractTaskNo, jdbcType=VARCHAR}
      </if>
      <if test="sampleNo != null">
        AND ID IN (select LIMS_EXTRACT_RECORD_ID from lims_extract_record_sample where SAMPLE_NO = #{sampleNo, jdbcType=VARCHAR})
      </if>
      <if test="sampleId != null">
        AND ID IN (select LIMS_EXTRACT_RECORD_ID from lims_extract_record_sample where SAMPLE_ID = #{sampleId, jdbcType=INTEGER})
      </if>
      <if test="entity.boardNo != null">
        AND BOARD_NO=#{entity.boardNo, jdbcType=VARCHAR}
      </if>
      <if test="entity.extractPersonId1 != null">
        and EXTRACT_PERSON_ID1=#{entity.extractPersonId1, jdbcType=VARCHAR}
      </if>
      <if test="entity.extractPersonName1 != null">
        and EXTRACT_PERSON_NAME1=#{entity.extractPersonName1, jdbcType=VARCHAR}
      </if>

        <if test="extractDatetimeStart != null">
          <![CDATA[ and EXTRACT_DATETIME>=#{extractDatetimeStart, jdbcType=TIMESTAMP}  ]]>
        </if>
        <if test="extractDatetimeEnd != null">
          <![CDATA[ and EXTRACT_DATETIME<=#{extractDatetimeEnd, jdbcType=TIMESTAMP}  ]]>
        </if>

    </where>
  </sql>

  <select id="selectPaginationList" parameterType="com.bazl.hslims.manager.model.vo.LimsExtractRecordVO" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from lims_extract_record
    <if test="_parameter != null">
      <include refid="Query_Where_Clause"/>
    </if>
    limit #{offset}, #{rows}
  </select>


  <select id="selectCount" parameterType="com.bazl.hslims.manager.model.vo.LimsExtractRecordVO" resultType="int">
    SELECT count(ID) from lims_extract_record
    <if test="_parameter != null">
      <include refid="Query_Where_Clause"/>
    </if>
  </select>

  <select id="selectListByCaseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from lims_extract_record
    where CASE_ID=#{caseId,jdbcType=INTEGER} order by EXTRACT_DATETIME desc
  </select>

  <select id="selectCountByCaseId" parameterType="java.lang.Integer" resultType="int">
    select COUNT(id) from lims_extract_record where CASE_ID=#{caseId, jdbcType=INTEGER}
  </select>

  <select id="selectSampleListByExtractRecordId" parameterType="java.lang.Integer" resultMap="LimsExtractRecordSampleResultMap">
    SELECT lsi.SAMPLE_NAME,d.DICT_NAME as SAMPLE_TYPE_NAME,lers.ID,lers.LIMS_EXTRACT_RECORD_ID, lers.SAMPLE_ID, lers.SAMPLE_NO, lers.EXTRACT_METHOD,
    lers.EXTRACT_HB, lers.EXTRACT_PSA, lers.EXTRACT_LI_FLAG, lers.EXTRACT_ZHEN_FLAG, lers.EXTRACT_JIAO_FLAG, lers.EXTRACT_YU_FLAG,
    lers.EXTRACT_OTHER_INSTRUMENT,lers.CREATE_PERSON_ID,lers.CREATE_PERSON_NAME,lers.EXTRACT_POSITION,lers.CHANGE_METHOD,lers.OTHER_CHANGE_METHOD
    FROM lims_extract_record_sample lers left join
    (lims_sample_info lsi left join dict_item d on lsi.SAMPLE_TYPE=d.DICT_CODE and d.DICT_TYPE_CODE='SAMPLE_TYPE') on lers.SAMPLE_ID=lsi.ID
    WHERE lers.LIMS_EXTRACT_RECORD_ID=#{limsExtractRecordId,jdbcType=INTEGER} order by lsi.SAMPLE_FLAG desc, lers.SAMPLE_NO asc
  </select>

  <select id="selectListBySampleId" parameterType="java.lang.Integer" resultMap="LimsExtractRecordSampleResultMap">
    select * from lims_extract_record_sample lers
    where lers.SAMPLE_ID=#{sampleId,jdbcType=INTEGER} order by lers.CREATE_DATETIME desc
  </select>

  <select id="selectCountBySampleNo" parameterType="java.lang.String" resultType="int">
    select count(distinct ler.TASK_ID) from lims_extract_record_sample lers
    left join lims_extract_record ler on ler.ID=lers.LIMS_EXTRACT_RECORD_ID
    where lers.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND ler.TASK_ID!=''
  </select>

  <select id="selectListBySampleNo" parameterType="java.lang.String" resultMap="LimsExtractRecordSampleResultMap">
    select * from lims_extract_record_sample lers
    left join lims_extract_record ler on ler.ID=lers.LIMS_EXTRACT_RECORD_ID
    where lers.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND ler.TASK_ID!=''
  </select>

  <select id="selectListSpitSampleNo" parameterType="java.lang.String" resultMap="LimsExtractRecordSampleResultMap">
    select * from lims_extract_record_sample lers
    left join lims_extract_record ler on ler.ID=lers.LIMS_EXTRACT_RECORD_ID
    where lers.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%')
  </select>

  <select id="selectSampleNoByTaskId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct ler.* from lims_extract_record_sample lers
    left join lims_extract_record ler on ler.ID=lers.LIMS_EXTRACT_RECORD_ID
    where lers.SAMPLE_NO like CONCAT('%', #{sampleNo,jdbcType=VARCHAR}, '%') AND ler.TASK_ID!=''
  </select>

  <select id="selectByTaskId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from lims_extract_record
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lims_extract_record
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.bazl.hslims.manager.model.po.LimsExtractRecord" useGeneratedKeys="true" keyProperty="id">
    insert into lims_extract_record (EXTRACT_TASK_NO, CASE_ID, BOARD_NO, SAMPLE_COUNT,
      EXTRACT_DATETIME, EXTRACT_PERSON_ID1, EXTRACT_PERSON_NAME1, EXTRACT_PERSON_ID2, EXTRACT_PERSON_NAME2, CREATE_PERSON)
    values (#{extractTaskNo,jdbcType=VARCHAR}, #{caseId,jdbcType=INTEGER}, #{boardNo,jdbcType=VARCHAR},
      #{sampleCount,jdbcType=INTEGER}, #{extractDatetime,jdbcType=TIMESTAMP},
      #{extractPersonId1,jdbcType=INTEGER}, #{extractPersonName1,jdbcType=VARCHAR},
      #{extractPersonId2,jdbcType=INTEGER}, #{extractPersonName2,jdbcType=VARCHAR},
      #{createPerson,jdbcType=VARCHAR})
  </insert>

  <insert id="insertLimsExtractRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsExtractRecordSample">
    insert into lims_extract_record_sample (LIMS_EXTRACT_RECORD_ID, SAMPLE_ID, SAMPLE_NO,
      EXTRACT_METHOD, EXTRACT_HB, EXTRACT_PSA, EXTRACT_LI_FLAG, EXTRACT_ZHEN_FLAG,
      EXTRACT_JIAO_FLAG, EXTRACT_YU_FLAG, EXTRACT_OTHER_INSTRUMENT,CREATE_PERSON_ID,CREATE_PERSON_NAME,
      EXTRACT_POSITION, CHANGE_METHOD, OTHER_CHANGE_METHOD)
    values (#{limsExtractRecordId,jdbcType=INTEGER}, #{sampleId,jdbcType=INTEGER},
      #{sampleNo,jdbcType=VARCHAR}, #{extractMethod,jdbcType=VARCHAR}, #{extractHb,jdbcType=VARCHAR}, #{extractPsa,jdbcType=VARCHAR},
      #{extractLiFlag,jdbcType=VARCHAR}, #{extractZhenFlag,jdbcType=VARCHAR}, #{extractJiaoFlag,jdbcType=VARCHAR}, #{extractYuFlag,jdbcType=VARCHAR},
      #{extractOtherInstrument,jdbcType=VARCHAR},#{createPersonId,jdbcType=INTEGER}, #{createPersonName,jdbcType=VARCHAR},
      #{extractPosition,jdbcType=VARCHAR},  #{changeMethod,jdbcType=VARCHAR},  #{otherChangeMethod,jdbcType=VARCHAR})
  </insert>


  <update id="updateLimsExtractRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsExtractRecordSample">
    update lims_extract_record_sample
    set LIMS_EXTRACT_RECORD_ID = #{limsExtractRecordId,jdbcType=INTEGER},
    SAMPLE_ID = #{sampleId,jdbcType=INTEGER},
    SAMPLE_NO = #{sampleNo,jdbcType=VARCHAR},
    EXTRACT_METHOD = #{extractMethod,jdbcType=VARCHAR},
    EXTRACT_HB = #{extractHb,jdbcType=VARCHAR},
    EXTRACT_PSA = #{extractPsa,jdbcType=VARCHAR},
    EXTRACT_LI_FLAG = #{extractLiFlag,jdbcType=VARCHAR},
    EXTRACT_ZHEN_FLAG = #{extractZhenFlag,jdbcType=VARCHAR},
    EXTRACT_JIAO_FLAG = #{extractJiaoFlag,jdbcType=VARCHAR},
    EXTRACT_YU_FLAG = #{extractYuFlag,jdbcType=VARCHAR},
    EXTRACT_POSITION = #{extractPosition,jdbcType=VARCHAR},
    CHANGE_METHOD = #{changeMethod,jdbcType=VARCHAR},
    OTHER_CHANGE_METHOD = #{otherChangeMethod,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteLimsExtractRecordSample" parameterType="com.bazl.hslims.manager.model.po.LimsExtractRecordSample">
    delete from lims_extract_record_sample
    where LIMS_EXTRACT_RECORD_ID=#{limsExtractRecordId,jdbcType=INTEGER} and ID=#{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteLimsExtractRecordSamplesByRecordId" parameterType="java.lang.Integer">
    delete from lims_extract_record_sample where LIMS_EXTRACT_RECORD_ID=#{limsExtractRecordId,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.bazl.hslims.manager.model.po.LimsExtractRecord">
    update lims_extract_record
    set EXTRACT_TASK_NO = #{extractTaskNo,jdbcType=VARCHAR},
      BOARD_NO = #{boardNo,jdbcType=VARCHAR},
      SAMPLE_COUNT = #{sampleCount,jdbcType=INTEGER},
      EXTRACT_DATETIME = #{extractDatetime,jdbcType=TIMESTAMP},
      EXTRACT_PERSON_ID1 = #{extractPersonId1,jdbcType=INTEGER},
      EXTRACT_PERSON_NAME1 = #{extractPersonName1,jdbcType=VARCHAR},
      EXTRACT_PERSON_ID2 = #{extractPersonId2,jdbcType=INTEGER},
      EXTRACT_PERSON_NAME2 = #{extractPersonName2,jdbcType=VARCHAR},
      CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      CREATE_PERSON = #{createPerson,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>